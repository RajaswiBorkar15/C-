//KMP for transmission error code
#include <iostream>
#include <string.h>
using namespace std;
const int N = 500010;
int ne[N];
char s[N];
int main(){
  //strat from 1 - n
	cin>>s+1;
  // length s+1
	int t=strlen(s+1);
// j on zero and i on second letter j = 0 i= 1i.e c for acacaca
	for(int i=2,j=0;i<=t;i++){
		while(j&&s[i]!=s[j+1]) j=ne[j]; // when j letter is not equal to ith
		if(s[i]==s[j+1]) j++;
		ne[i]=j; // lps (longest prefix suffix)
	}
// when longest suffix is available
	if(ne[t]>t/2) {
		cout<<"Yes"<<endl;
		for(int i=1;i<=ne[t];i++) cout<<s[i];
	}
	else cout<<"No"<<endl;
}
